/*
 * Starcoder - a server to read/write data from/to the stars, written in Go.
 * Copyright (C) 2018 InfoStellar, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'http://dl.bintray.com/curioswitch/curiostack'
        }
        maven {
            url 'http://palantir.bintray.com/releases'
        }
        mavenLocal()
    }
    dependencies {
        classpath 'gradle.plugin.com.github.blindpirate:gogradle:0.8.0'
        classpath 'org.curioswitch.curiostack:gradle-curiostack-plugin:0.0.115'
    }
}

apply plugin: 'org.curioswitch.gradle-curiostack-plugin'
apply plugin: 'org.curioswitch.gradle-grpc-api-plugin'
apply plugin: 'com.github.blindpirate.gogradle'

golang {
    version = '1.10'
    packagePath = 'github.com/infostellarinc/starcoder'
}

def gopath = System.env['GOPATH'] ?: project.file('.gogradle/project_gopath').toString()
println gopath

protobuf {
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                gofast {
                    option 'plugins=grpc'
                    option 'Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types'
                    option 'Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types'
                    // Output into root directory for gogradle
                    outputSubDir = '../../../../..'
                }
            }
        }
    }
    plugins {
        gofast {
            path = project.file("${gopath}/bin/protoc-gen-gofast")
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'api'
        }
    }
}

task getProtocGoPlugin(type: com.github.blindpirate.gogradle.Go) {
    outputs.file project.file("${gopath}/bin/protoc-gen-gofast")
    go 'get -u github.com/gogo/protobuf/protoc-gen-gofast'
}

task deleteGeneratedFiles(type: Delete) {
    delete fileTree(project.projectDir) {
        include '**/*.pb.go'
        include '**/*.mock.go'
        include '**/rice-box.go'
    }
    delete 'vendor'
}
tasks.clean.dependsOn deleteGeneratedFiles

afterEvaluate {
    tasks.generateProto.dependsOn getProtocGoPlugin
    tasks.goBuild.dependsOn tasks.generateProto
}

gcloud {
    clusterBaseName = 'infostellar-starcoder'
    cloudRegion = 'asia-northeast1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
    distributionType = 'ALL'
}

// protobuf-gradle-plugin always apply Java plugin, but we don't need it.
tasks.compileJava.enabled = false
tasks.compileTestJava.enabled = false

license {
    header file('LICENSE.header')
    mapping {
        proto = 'SLASHSTAR_STYLE'
    }
}
